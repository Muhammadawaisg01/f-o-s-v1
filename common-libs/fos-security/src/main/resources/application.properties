# spring.datasource.url= jdbc:mysql://localhost:5432/testdb
# spring.datasource.username=postgres
# spring.datasource.password=aaa
# spring.jpa.hibernate.ddl-auto= update

# server.servlet.context-path=/security

spring.datasource.url=jdbc:postgresql://localhost:5432/user_service
spring.datasource.username=postgres
spring.datasource.password=aaa
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

server.port=8082

spring.application.name=fos-security

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html


# logging.level.org.springframework.security=DEBUG
# logging.level.org.springdoc=DEBUG

# App Properties
spring.app.jwtSecret= ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
#Expiration time is 1 day
spring.app.jwtExpirationMs= 86400000
spring.app.jwtRefreshExpirationMs= 259200000



# spring.cloud.discovery.enabled=true

# spring.cloud.gateway.discovery.locator.enabled=true


# spring.cloud.gateway.discovery.locator.url-expression=http://localhost:8020
# spring.cloud.gateway.discovery.locator.predicates[0]=Path=/content-service/**
# spring.cloud.gateway.discovery.locator.route-id-prefix=

# Gateway Routes Configuration
spring.cloud.gateway.routes[0].id=content-service
spring.cloud.gateway.routes[0].uri=http://localhost:8020/content-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/**
# spring.cloud.gateway.routes[0].filters[0]=RewritePath=/content-service/(?<remaining>.*), /${remaining}

# spring.cloud.gateway.routes[1].id=content-service
# spring.cloud.gateway.routes[1].uri=http://localhost:8082
# spring.cloud.gateway.routes[1].predicates[0]=Path=/content-service/**

# CORS Configuration
# spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=https://your-client.com
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE
# spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=Authorization,Content-Type

# OAuth2 Resource Server Configuration
# spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth-server.com


# logging.level.org.springframework.cloud.gateway=DEBUG


# eureka.client.eureka-server-port=8761
# eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.client.service-url.default-zone=http://localhost:8761/eureka

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


# logging.level.com.netflix.eureka=DEBUG
# logging.level.com.netflix.discovery=DEBUG

